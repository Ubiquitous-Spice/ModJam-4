buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0"
group = "com.github.ubiquitousspice"
archivesBaseName = "BloodStains"

minecraft {
    version = "1.7.2-10.12.1.1082"
    replaceIn "BloodStains.java"
    replace "@VERSION@", version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'

        // replace version and MCVersion
        // forge version is also accessible via project.minecraftforgeVersion
        // it contains the full minecraft version, including buildNumber
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not text
    from(sourceSets.main.resources.srcDirs) { exclude '**/*.info' }
}

configurations {
    packed
    compile.extendsFrom packed
}

dependencies {
    // all hail annotations
    compile 'org.projectlombok:lombok:1.12.6'
    compile 'com.google.gag:gag:1.0.1'
    
    packed 'com.github.jponge:lzma-java:1.3' // lzma
}

jar {
    configurations.packed.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// add a source jar
task sourceJar(type: Jar, dependsOn: "sourceMainJava") {
    from "build/sources/java"
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives sourceJar
    archives deobfJar
    archives javadocJar
}
